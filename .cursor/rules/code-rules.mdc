---
description: 项目代码的背景和Ai生成代码时必须遵守的规范
globs: 
alwaysApply: false
---
# 项目背景
这是一个正在开发状态的基于Android/Unity和FastAPI的AR智能导游眼镜的前后端系统，整合多模态感知、大语言模型（LLM）和知识图谱技术，实现低延迟的实时交互。项目包含AR眼镜客户端、Python后端服务和基于LLM的多模态Agent部署，本规则只是项目蓝图，要求生成代码务必遵守这个规则，当前项目真实代码并非完全实现了所有技术细节。

## 产品概述
-	产品名称： AI智能导游眼镜
-	产品类型： 智能可穿戴设备
-	产品定位： 提供一种新颖的人机交互方式，完全等同于资深人工导游，不仅能够实时解答游客的各种疑问（被动回答），还能通过视觉画面感知场景信息来主动为顾客提供讲解（主动讲解和交互），使用户在旅途中获得更丰富、更深入的沉浸式体验。
-	产品亮点：
1.	Agent大型语言模型交互： 基于langgraph框架集成先进的Agent，支持用户与AI导游进行实时对话，解答疑问，提供个性化服务。
2.	多模态信息融合： 结合视觉识别、语音识别、自然语言处理等技术，实现对周围环境的全面感知和理解。


# 编码标准
[1,3](mdc:@ref)
- Python代码遵循PEP8规范，TypeScript/Java代码遵循Google风格指南
- 优先使用异步编程（async/await）处理IO密集型任务
- 所有API接口必须包含类型提示和Pydantic模型验证
- 核心算法模块必须包含时间复杂度注释
- 客户端与服务端交互需包含ProtoBuffer定义
- 代码要加上详细的中文注释

# 首选库与框架
[2,3](mdc:@ref)
# 服务器端
- Web框架: FastAPI (>=0.95)
- LLM编排: LangGraph
- 数据库: PostgreSQL + SQLAlchemy异步驱动
- 消息队列: Kafka + aiokafka
- 部署: Gunicorn+Uvicorn组合

# AR眼镜端
- 通信协议: gRPC-Web + Protocol Buffers
- 3D渲染: Unity URP管线


# 测试要求
[2,3](mdc:@ref)
- 接口测试: 使用httpx模拟异步请求
- 压力测试: Locust模拟1000+并发AR设备连接
- 单元测试覆盖率 ≥85%
- 核心模块必须包含性能基准测试
- AR渲染需进行帧率稳定性测试（≥60FPS）


# 错误处理
[1,2](mdc:@ref)
- 实现分级错误处理：
  1. 客户端错误（立即反馈）
  2. 服务端错误（3秒内降级响应）
  3. LLM错误（返回预设知识库内容）
- 关键路径必须包含重试机制（指数退避算法）
- 所有异常必须包含错误码和调试指纹
