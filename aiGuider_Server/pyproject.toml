[build-system]
requires = ["setuptools>=45", "wheel", "setuptools-scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-guider-server"
version = "0.1.0"
description = "AR智能导游眼镜系统后端服务"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "AI Guider Team", email = "dev@aiguider.com"}
]
keywords = ["fastapi", "ar", "ai", "tour-guide", "langgraph"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
]

dependencies = [
    # Web框架和服务器
    "fastapi>=0.95.0",
    "uvicorn[standard]>=0.22.0",
    "python-multipart>=0.0.5",
    # 数据库相关
    "sqlalchemy>=2.0.0",
    "asyncpg>=0.27.0",
    # 数据验证和配置
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "python-dotenv>=1.0.0",
    # HTTP客户端
    "httpx>=0.24.0",
    # LangGraph Agent 智能体框架
    "langchain>=0.1.0",
    "langchain-core>=0.1.0",
    "langchain-community>=0.0.10",
    "langgraph>=0.0.20",
    "langchain-text-splitters>=0.0.1",
    # 多模态处理
    "pillow>=10.0.0",
    "numpy>=1.24.0",
    # AI模型API支持
    "dashscope>=1.13.0", # 通义千问API
    "qianfan>=0.0.1", # 百度千帆接口
    # 工具库
    "regex>=2023.0.0",
    "aiohttp>=3.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "httpx>=0.24.0",
]
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.20.0",
]

[project.scripts]
ai-guider-server = "app.main:main"

[project.urls]
Homepage = "https://github.com/your-org/ai-guider"
Documentation = "https://your-org.github.io/ai-guider"
Repository = "https://github.com/your-org/ai-guider.git"
Issues = "https://github.com/your-org/ai-guider/issues"

[tool.uv]
# 使用最新的依赖解析器  
resolution = "highest"
# 确保虚拟环境在项目目录内
managed = true

[tool.uv.pip]
# 使用国内镜像源加速
index-url = "https://mirrors.aliyun.com/pypi/simple"

[tool.setuptools.packages.find]
where = ["."]
include = ["app*"]
exclude = ["tests*"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_defs = true
follow_imports = "silent"
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_unimported = true
no_implicit_optional = true
warn_return_any = true
warn_unused_configs = true
disallow_subclassing_any = true

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 
